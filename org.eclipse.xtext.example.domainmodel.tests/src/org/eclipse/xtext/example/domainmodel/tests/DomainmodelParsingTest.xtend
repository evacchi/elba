/*
 * generated by Xtext
 */
package org.eclipse.xtext.example.domainmodel.tests

import com.google.inject.Inject
import org.eclipse.xtext.common.types.JvmOperation
import org.eclipse.xtext.common.types.TypesPackage
import org.eclipse.xtext.example.domainmodel.domainmodel.DomainModel
import org.eclipse.xtext.example.domainmodel.domainmodel.Entity
import org.eclipse.xtext.example.domainmodel.domainmodel.Operation
import org.eclipse.xtext.example.domainmodel.domainmodel.PackageDeclaration
import org.eclipse.xtext.example.domainmodel.domainmodel.Property
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.eclipse.xtext.xbase.jvmmodel.IJvmModelAssociations
import org.eclipse.xtext.xbase.validation.IssueCodes
import org.junit.Assert
import org.junit.Test
import org.junit.runner.RunWith
import org.eclipse.xtext.example.domainmodel.domainmodel.TypeClass
import org.eclipse.xtext.example.domainmodel.domainmodel.TypeClassInstance

@RunWith(XtextRunner)
@InjectWith(DomainmodelInjectorProvider)
class DomainmodelParsingTest{

	@Inject extension ParseHelper<DomainModel>
	@Inject extension ValidationTestHelper
	@Inject extension IJvmModelAssociations

	@Test
	def void testParsing() {
		val model = '''
			package example {
			  entity MyEntity {
			    String hello
			  }
			  typeclass Show<A> {
			  	String show();
		  	  }
		  	  typeclass instance MyShow for Show<MyEntity> {
		  	  	String show() {
		  	  		self.toString();
		  	  }
			}
		'''.parse
		
		val pack = model.getElements().get(0) as PackageDeclaration
		Assert.assertEquals("example", pack.getName())
		
		val tc = model.elements.get(1) as TypeClass
		println(tc)
		
		val tci = model.elements.get(2) as TypeClassInstance
		println(tci)
		
		
		
		

	}
	
//	@Test
//	def void testJvmTypeReferencesValidator() {
//		'''
//			import java.util.List
//			package example {
//			  entity MyEntity {
//			    p : List<int>
//			  }
//			}
//		'''.parse.assertError(
//			TypesPackage.Literals.JVM_TYPE_REFERENCE,
//			IssueCodes.INVALID_USE_OF_TYPE,
//			"The primitive 'int' cannot be a type argument"
//		)
//	}
//	
//	@Test
//	def void testParsingAndLinking() {
//		'''
//			package example {
//			  entity MyEntity {
//			    property : String
//			    op foo(String s) : String {
//			    	this.property = s
//			    	return s.toUpperCase
//			    }
//			  }
//			}
//		'''.parse.assertNoErrors
//	}
//	
//	@Test
//	def void testParsingAndLinkingWithImports() {
//		'''
//			import java.util.List
//			package example {
//			  entity MyEntity {
//			    p : List<String>
//			  }
//			}
//		'''.parse.assertNoErrors
//	}
//	
//	@Test
//	def void testReturnTypeInference() {
//		val model = '''
//			package example {
//			  entity MyEntity {
//			    property : String
//			    op foo(String s) {
//			    	return property.toUpperCase + s
//			    }
//			  }
//			}
//		'''.parse
//		val pack = model.elements.head as PackageDeclaration
//		val entity = pack.elements.head as Entity
//		val op = entity.features.last as Operation
//		val method = op.jvmElements.head as JvmOperation
//		Assert.assertEquals("String", method.returnType.simpleName)
//	}
}
